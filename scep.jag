<%
	var iosMdmModule = require('/modules/iosmdm.js').iosmdm;
	var common = require('/modules/common.js');
	var iosMdm = new iosMdmModule();
	var log = new Log();
	var operation = request.getParameter("operation");
	 
	var caPath = common.getCAPath();
	var raPath = common.getRAPath();
	var caPrivateKeyPath = common.getCAPrivateKey();
	var raPrivateKeyPath = common.getRAPrivateKey();
	
	if(operation == "GetCACert") {
		
		var scepResponse = iosMdm.getCACert(caPath, raPath);

		if (scepResponse.getResultCriteria() == "CA_CERT_FAILED") {
			response.sendRedirect("mdmerror.jag");
		} else if (scepResponse.getResultCriteria() == "CA_CERT_RECEIVED") {
			response.contentType = "application/application/x-x509-ca-cert";
		} else if (scepResponse.getResultCriteria() == "CA_RA_CERT_RECEIVED") {
			response.contentType = "application/x-x509-ca-ra-cert";
		} else {
			response.sendRedirect("mdmerror.jag");
		}
		
		var byteArrayInputStream = new Packages.java.io.ByteArrayInputStream(scepResponse.getEncodedResponse());
		print(new Stream(byteArrayInputStream)); 
		
	} else if(operation == "GetCACaps") {
		
		response.contentType = "text/plain";
		
		var byteArrayInputStream = new Packages.java.io.ByteArrayInputStream(iosMdm.getCACaps());
		print(new Stream(byteArrayInputStream)); 
		
	} else if(operation == "PKIOperation") {
		var pkiMessage = iosMdm.getPKIMessage(request.getInputStream(), caPath, caPrivateKeyPath, 
			raPath, raPrivateKeyPath);
					
		response.contentType = "application/x-pki-message";
		var byteArrayInputStream = new Packages.java.io.ByteArrayInputStream(pkiMessage);	
		print(new Stream(byteArrayInputStream)); 
			
	} else  {
		log.error("Invalid SCEP request");
	}
	
%>
